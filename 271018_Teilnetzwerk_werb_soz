# Edge- und Nodelist koppeln

# Gesamtnetzwerk dfb 

# IGRAPH-OBJEKT

library(igraph)
# liest die Dateien direkt aus dem github-Verzeichnis ein
el <- read.csv("https://raw.githubusercontent.com/hdm-rz015/DFB_Netzwerk/master/101118_Edgelist_einfach.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("https://raw.githubusercontent.com/hdm-rz015/DFB_Netzwerk/master/271018_Nodelist.csv", header=T, as.is=T, sep = ",")

# prüft, ob alle Variablen eingelesen wurden
head(el)
head(nodes)

# wandelt die edgelist in eine Matrix um und baut das igraph-Objekt
hties <-as.matrix(el)
dfb <- graph_from_data_frame(d=hties, vertices=nodes, directed=F)
dfb
plot(dfb)

#----------------------------------------------------------------------------------------------

# SELEKTION und VERGLEICH von zwei Teilnetzwerken
# wir wollen Soziales Engagement (soz) mit Werbekooperationen (werb) vergleichen. Deshalb müssen wir das Netzwerk erst noch in zwei separate Netzwerke aufteilen:

# Selektion in Teilnetzwerk soz und werb
edge.attributes(dfb)
edge.attributes(dfb)$relation
# das edge attribut relationship ist in 1 (Soziales) und 2 (Werbekooperation) kodiert.

#-----------------------------------------------------------------------------------------------

# TEILNETZWERK SOZIALES ENGAGEMENT

soz <- subgraph.edges(dfb, E(dfb)[relationship == 1])
soz
edge.attributes(soz)$relation

plot(soz, edge.arrow.size=0.1, 
     main="Soziales Engagement")

# EINFÄRBEN aufgrund von Vertex-Attributen

# Im Netzwerk sind Spieler, Engagement und Werbekooperationen abgelegt, die über das Vertex.Attribut $type mit "1" (Spieler) oder "2" (Werbekooperationen) oder "3" (soziales Engagement) kodiert sind.
vertex.attributes(soz)$type

#Alle Spieler sollen nun mit der Farbe grün und soziales Engagement mit der Farbe blau visualisiert werden.

#FARBEN nach Vertex-Attributen definieren
faerbung <- c("green", "grey", "blue")

#definiert das Farbspektrum, der verwendeten Farben und legt diese in einem neuen Vector faerbung fest. Da wir wissen, dass wir bei §Type nur drei Werte haben (Spieler, Werbekooperationen, soziales Engagement) brauchen wir auch drei Werte. Die direkten Farbpaletten sind hier hinterlegt: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf.


V(soz)$color <- faerbung[V(soz)$type]
# weist dem Vertex-Attribut color die Funktion faerbung zu, die wir vorher mit drei Farben definiert haben.

plot(soz)

# FORM DER AKTEURE ANPASSEN

V(soz)$shape = "square"
# definiert, dass alle Knoten als square auftreten

spieler <- V(soz)[type == "1"]
# wöhlt alle Knoten aus, die das Vertex-Attribut "1" bei type gesetzt haben

spieler

V(soz)[spieler]$shape = "circle"
# weist allen Werten von spieler den Shape "cirle" zu.

plot(soz)


# Das Netzwerk wird entzerrt mit der Variable
coords <- layout_with_kk(soz)*0.5

# Relative Werte durch die Größe der Knoten abbilden

# berechnet den Degree-Wert für alle Knoten und weist ihm die Variable "knotengroesse" zu.
knotengroesse <- degree(soz)
knotengroesse

# plottet da Netzwerk und ändert die Größe des Knotens nach dem Degree-Wert
par(mfrow=c(1,1)) 


plot(soz, 
     vertex.size=knotengroesse*3, # führt die relative Größe der Knoten aus
     vertex.frame.color="black", 
     vertex.label.family = "Helvetica", 
     vertex.label.color = "grey25", 
     layout=coords, 
     edge.color="grey80",
     edge.curved=.2,
     edge.width=E(soz)$weight,
     rescale=FALSE, 
     ylim=c(-3,3),
     xlim=c(-4,4), 
     asp = 0,
     main="Teilnetzwerk Soziales Engagement")





# ------------------------------------------------------------------------------------------

# TEILNETZWERK WERBEKOOPERATIONEN

werb <- subgraph.edges(dfb, E(dfb)[relationship == 2])
werb
edge.attributes(werb)$relation

plot(werb, edge.arrow.size=0.1, 
     main="Werbekooperationen")

# EINFÄRBEN aufgrund von Vertex-Attributen

# Im Netzwerk sind Spieler, Engagement und Werbekooperationen abgelegt, die über das Vertex.Attribut $type mit "1" (Spieler) oder "2" (Werbekooperationen) oder "3" (soziales Engagement) kodiert sind.
vertex.attributes(werb)$type

#Alle Spieler sollen nun mit der Farbe grün und soziales Engagement mit der Farbe blau visualisiert werden.

#FARBEN nach Vertex-Attributen definieren
faerbung <- c("green", "grey", "blue")

#definiert das Farbspektrum, der verwendeten Farben und legt diese in einem neuen Vector faerbung fest. Da wir wissen, dass wir bei §Type nur drei Werte haben (Spieler, Werbekooperationen, soziales Engagement) brauchen wir auch drei Werte. Die direkten Farbpaletten sind hier hinterlegt: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf.


V(werb)$color <- faerbung[V(werb)$type]
# weist dem Vertex-Attribut color die Funktion faerbung zu, die wir vorher mit drei Farben definiert haben.

plot(werb)

# FORM DER AKTEURE ANPASSEN

V(werb)$shape = "square"
# definiert, dass alle Knoten als square auftreten

spieler <- V(werb)[type == "1"]
# wöhlt alle Knoten aus, die das Vertex-Attribut "1" bei type gesetzt haben

spieler

V(werb)[spieler]$shape = "circle"
# weist allen Werten von spieler den Shape "cirle" zu.

plot(werb)


# Das Netzwerk wird entzerrt mit der Variable
coords <- layout_with_kk(werb)*0.5

# Relative Werte durch die Größe der Knoten abbilden

# berechnet den Degree-Wert für alle Knoten und weist ihm die Variable "knotengroesse" zu.
knotengroesse <- degree(werb)
knotengroesse

# plottet da Netzwerk und ändert die Größe des Knotens nach dem Degree-Wert
par(mfrow=c(1,1)) 


plot(werb, 
     vertex.size=knotengroesse*3, # führt die relative Größe der Knoten aus
     vertex.frame.color="black", 
     vertex.label.family = "Helvetica", 
     vertex.label.color = "grey25", 
     layout=coords, 
     edge.color="grey80",
     edge.curved=.2,
     edge.width=E(werb)$weight,
     rescale=FALSE, 
     ylim=c(-1,3),
     xlim=c(-2.5,3), 
     asp = 0,
     main="Teilnetzwerk Werbekooperationen")

#---------------------------------------------------------------------------------------------------------

#DIREKTER VERGLEICH von zwei Netzwerken

# direkter Vergleich der beiden Netzwerke herstellen

par(mfrow=c(1,2), mar=c(0,0,2,0))

plot(soz, 
     layout = layout_with_kk, 
     main="Teilnetzwerk Soziales Engagement",
     vertex.size=knotengroesse*3, # führt die relative Größe der Knoten aus
     vertex.frame.color="black", 
     vertex.label.family = "Helvetica", 
     vertex.label.color = "grey25", 
     layout=coords, 
     edge.color="grey80",
     edge.curved=.2,
     edge.width=E(soz)$weight,
     ylim=c(-1,1),
     xlim=c(-2,2), 
     rescale=TRUE, 
     asp = 0,)


plot(werb, 
     layout = layout_with_kk, 
     main="Teilnetzwerk Werbekooperationen",
     vertex.size=knotengroesse*3, # führt die relative Größe der Knoten aus
     vertex.frame.color="black", 
     vertex.label.family = "Helvetica", 
     vertex.label.color = "grey25", 
     layout=coords, 
     edge.color="grey80",
     edge.curved=.2,
     edge.width=E(werb)$weight,
     ylim=c(-1,1),
     xlim=c(-2,2), 
     rescale=TRUE, 
     asp = 0,)
